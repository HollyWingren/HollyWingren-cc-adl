{"project": "cabinetry", "project_url": "http://project-homepage.org/", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"31": "3f0049b574a4e8e57a5752f0ec890a681114e239", "53": "6af2e276bc2a059a3f4de5adfb826e976c9d18df", "128": "52e4752151599f8f9ac2c9514c0d54a22338a1b2", "165": "64f2c5d429449b75d5afedf36e10c74931eb0ff9", "323": "8d1a0dba757fc36bfacae849153f8f155125421b", "395": "ab630d9ba7b63bf980ed7d0a3b03bd0532004db4", "404": "7da174573f56f6ac548dbda5b04fa80c97b5b455", "510": "8d7f11fde255f5acb6ec08a8cecbcce904d36d54", "583": "7695f7e27466166a657dcd20a8804272ab87d953", "635": "bb21d2d39234eed3a313cbfa57cb018313bd4534", "653": "a2ef2c3be08be8b7512b158d6ed76763648a0923", "776": "65845f2267c2021a08af531053b400a530fd95dd", "782": "0043562f3fd0721c50c4fc02db2d98e0776ad738", "866": "1f5ba534430268afed06e32b0784c4edc5e2aafc", "967": "a65abd125a222da68716b050ba363004cc5b0f5b", "1040": "1735060aa64f1b9452144f4aff39ad0b64bea3da", "1116": "e80dbf38169310397b77a1e0753eee2827400b47", "1139": "37353b56e534eecddb486af8df18598b44a2c27c", "1326": "0cc496fc285d5855c8814de4a9158029ce3edc8a", "1408": "ae7444cdd4211e13a9203fc376e1ce910f88cd6d", "1494": "961fc7c78012e0774b8eaa31d4472fb0b8e96a6c", "1588": "1b83e16a97a3c7ba86e908b95b7d22343ff2d3a3"}, "revision_to_date": {"31": 1588881313000, "53": 1589151129000, "128": 1592361913000, "165": 1594030423000, "323": 1596202259000, "395": 1596986341000, "404": 1597062477000, "510": 1599562670000, "583": 1600450018000, "635": 1601386790000, "653": 1603285710000, "776": 1607708371000, "782": 1607970725000, "866": 1611151586000, "967": 1613598148000, "1040": 1620402929000, "1116": 1625083243000, "1139": 1625437435000, "1326": 1631139959000, "1408": 1634142539000, "1494": 1644596881000, "1588": 1659285651000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz"], "machine": ["FlatIron"], "num_cpu": ["112"], "os": ["Linux 4.18.0-358.el8.x86_64"], "ram": ["527526844"], "python": ["3.8"], "uproot": [""], "pip+wget": [""], "branch": ["master", "ae7444c"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz", "machine": "FlatIron", "num_cpu": "112", "os": "Linux 4.18.0-358.el8.x86_64", "ram": "527526844", "python": "3.8", "uproot": "", "pip+wget": "", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz", "machine": "FlatIron", "num_cpu": "112", "os": "Linux 4.18.0-358.el8.x86_64", "ram": "527526844", "python": "3.8", "uproot": "", "pip+wget": "", "branch": "ae7444c"}], "benchmarks": {"cabinetry.Q1Suite.time_build_template": {"code": "class Q1Suite:\n    def time_build_template(self):\n        cabinetry.templates.build(self.cabinetry_config, method=\"uproot\")\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_build_template", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "abcd761f8b20f92ed5fa5cca4fa8a5f499f2ad0d50b4445100c79eeb0986d921", "warmup_time": -1}, "cabinetry.Q1Suite.time_build_template_postprocess": {"code": "class Q1Suite:\n    def time_build_template_postprocess(self):\n        cabinetry.templates.build(self.cabinetry_config, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_build_template_postprocess", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e74bebfee3243db36f152f89f159baf64cfd1fc373f915bc93977ec0ad1b4105", "warmup_time": -1}, "cabinetry.Q1Suite.time_discovery_significance": {"code": "class Q1Suite:\n    def time_discovery_significance(self):\n        significance_results = cabinetry.fit.significance(self.model, self.data)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_discovery_significance", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6e574ec4bd49265712dcfc9fdad20ffa7a1fabd9720172db59a762387ca7ce61", "warmup_time": -1}, "cabinetry.Q1Suite.time_likelihood_scans": {"code": "class Q1Suite:\n    def time_likelihood_scans(self):\n        scan_results = cabinetry.fit.scan(self.model, self.data, \"WeightBasedModeling\")\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_likelihood_scans", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e641534fb6ac96acd72069a1a789f8d31618b8e552c1a923b00b943b4a7c503b", "warmup_time": -1}, "cabinetry.Q1Suite.time_model_prediction": {"code": "class Q1Suite:\n    def time_model_prediction(self):\n        model_pred = cabinetry.model_utils.prediction(self.model)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_model_prediction", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1260967fac28d5dccf11548ed58e9cba4f7c1be175dad261b4312001185644cb", "warmup_time": -1}, "cabinetry.Q1Suite.time_ranking_nuisance_parameters": {"code": "class Q1Suite:\n    def time_ranking_nuisance_parameters(self):\n        ranking_results = cabinetry.fit.ranking(self.model, self.data)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_ranking_nuisance_parameters", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a3b4e804a09a4179e741b86706539348c37e94a031136387b598b5bc2eb641b3", "warmup_time": -1}, "cabinetry.Q1Suite.time_read_histograms": {"code": "class Q1Suite:\n    def time_read_histograms(self):\n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_read_histograms", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c876be7dc6177d3fc2a55e0d983ff145533f6eea9a0966272d5ff60574cd9a60", "warmup_time": -1}, "cabinetry.Q1Suite.time_read_histograms_postprocess": {"code": "class Q1Suite:\n    def time_read_histograms_postprocess(self):\n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_read_histograms_postprocess", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "223cce74b545dffa249b11137dfa1945432176c0d6c7dd9cf34f3ac4adb74a10", "warmup_time": -1}, "cabinetry.Q1Suite.time_workspace_build": {"code": "class Q1Suite:\n    def time_workspace_build(self):\n        workspace_path = \"workspaces/example_workspace.json\"\n        cabinetry.workspace.save(self.ws, workspace_path)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_workspace_build", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5707c03a55a9a71b913ef09b2e6dae1a99aef16ffddb689f793c29d8df587ab1", "warmup_time": -1}, "cabinetry.Q1Suite.time_workspace_fitting": {"code": "class Q1Suite:\n    def time_workspace_fitting(self):\n        fit_results = cabinetry.fit.fit(self.model, self.data)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_workspace_fitting", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0efaba563512a138e9d5860bdd4f8fad5e95507d682d99852804f6ca20eac0a2", "warmup_time": -1}, "cabinetry.Q1Suite.time_workspace_limit_fitting": {"code": "class Q1Suite:\n    def time_workspace_limit_fitting(self):\n        limit_results = cabinetry.fit.limit(self.model,self.data)\n\n    def setup(self):\n        self.cabinetry_config = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"{SamplePath}\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"Variable\": \"jet_pt\",\n                    \"Filter\": \"lep_charge > 0\",\n                    \"Binning\": [300, 400, 500, 600],\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"Tree\": \"pseudodata\",\n                    \"SamplePath\": \"data.root\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"Tree\": \"signal\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"Tree\": \"background\",\n                    \"SamplePath\": \"prediction.root\",\n                    \"Weight\": \"weight\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\n                        \"SamplePath\": \"prediction.root\",\n                        \"Tree\": \"background_varied\",\n                    },\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"Weight\": \"weight_up\"},\n                    \"Down\": {\"Weight\": \"0.7*weight\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        file_name = wget.download(\"https://github.com/cabinetry/cabinetry-tutorials/blob/master/inputs/histograms.root?raw=true\", \"histograms.root\")\n    \n        self.cabinetry_config_histograms = {\n            \"General\": {\n                \"Measurement\": \"minimal_example\",\n                \"POI\": \"Signal_norm\",\n                \"HistogramFolder\": \"histograms/\",\n                \"InputPath\": \"histograms.root:{RegionPath}/{SamplePath}/{VariationPath}\",\n                \"VariationPath\": \"Nominal\",\n            },\n            \"Regions\": [\n                {\n                    \"Name\": \"Signal_region\",\n                    \"RegionPath\": \"SR\",\n                }\n            ],\n            \"Samples\": [\n                {\n                    \"Name\": \"Data\",\n                    \"SamplePath\": \"Data\",\n                    \"Data\": True,\n                },\n                {\n                    \"Name\": \"Signal\",\n                    \"SamplePath\": \"Signal\",\n                },\n                {\n                    \"Name\": \"Background\",\n                    \"SamplePath\": \"Background\",\n                },\n            ],\n            \"Systematics\": [\n                {\n                    \"Name\": \"Luminosity\",\n                    \"Up\": {\"Normalization\": 0.05},\n                    \"Down\": {\"Normalization\": -0.05},\n                    \"Type\": \"Normalization\",\n                },\n                {\n                    \"Name\": \"Modeling\",\n                    \"Up\": {\"VariationPath\": \"Modeling_Up\"},\n                    \"Down\": {\"Symmetrize\": True},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n                {\n                    \"Name\": \"WeightBasedModeling\",\n                    \"Up\": {\"VariationPath\": \"WeightBasedModeling_Up\"},\n                    \"Down\": {\"VariationPath\": \"WeightBasedModeling_Down\"},\n                    \"Samples\": \"Background\",\n                    \"Type\": \"NormPlusShape\",\n                },\n            ],\n            \"NormFactors\": [\n                {\n                    \"Name\": \"Signal_norm\",\n                    \"Samples\": \"Signal\",\n                    \"Nominal\": 1,\n                    \"Bounds\": [0, 10],\n                }\n            ],\n        }\n    \n        create_input_ntuples()\n    \n        cabinetry.templates.collect(self.cabinetry_config_histograms, method=\"uproot\")\n        cabinetry.templates.postprocess(self.cabinetry_config)\n        workspace_path = \"workspaces/example_workspace.json\"\n        self.ws = cabinetry.workspace.build(self.cabinetry_config)\n        cabinetry.workspace.save(self.ws, workspace_path)\n        bws = cabinetry.workspace.load(workspace_path)\n        self.model, self.data = cabinetry.model_utils.model_and_data(self.ws)", "min_run_count": 2, "name": "cabinetry.Q1Suite.time_workspace_limit_fitting", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "63aca8a324626a61808e90ba9819cafeab0685b487f2ca0333bbffa87ba00e03", "warmup_time": -1}}, "machines": {"FlatIron": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz", "machine": "FlatIron", "num_cpu": "112", "os": "Linux 4.18.0-358.el8.x86_64", "ram": "527526844", "version": 1}}, "tags": {"v0.0.1": 31, "v0.0.2": 53, "v0.0.3": 128, "v0.0.4": 165, "v0.0.5": 323, "v0.1.0": 395, "v0.1.1": 404, "v0.1.2": 510, "v0.1.3": 583, "v0.1.4": 635, "v0.1.5": 653, "v0.1.6": 776, "v0.1.7": 782, "v0.1.8": 866, "v0.2.0": 967, "v0.2.1": 1040, "v0.2.2": 1116, "v0.2.3": 1139, "v0.3.0": 1326, "v0.4.0": 1408, "v0.4.1": 1494}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}